#version 330

in vec3 fragNormal;
in vec3 viewedVertex;

out vec4 fragColor;

float light(){

	//Higher for sharper highlights
	float power = 3.0;
	
	return pow(max(dot(normalize(fragNormal), normalize(vec3(1, 2, 1))), 0.0), power);
}

float fog(){

	//Controls rate of fog thickening. Higher for quicker
	float base = 1.02;
	
	//Distance fog starts
	float dist = 50.0;
	
	return clamp(pow(base, length(viewedVertex) - dist) - 1, 0.0, 1.0);
}

void main()
{
	float lightFactor = light();
	float fogFactor = fog();
	vec3 fog = vec3(0.5, 0.7, 1.0);
	vec3 base = vec3(0.7, 1.0, 0.5);
	fragColor = vec4(fog * fogFactor + lightFactor * base * (1.0 - fogFactor), 1.0);
}